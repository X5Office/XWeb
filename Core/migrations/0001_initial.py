# Generated by Django 5.1.2 on 2024-12-05 21:35

import Core.managers
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_text', models.CharField(max_length=100, verbose_name='Ошибка')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время ошибки')),
            ],
            options={
                'verbose_name': 'ошибку',
                'verbose_name_plural': 'ошибки',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('login', models.CharField(max_length=100, unique=True, verbose_name='Логин')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='name')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('is_staff', models.BooleanField(default=True, verbose_name='is_staff')),
                ('login_key', models.CharField(blank=True, max_length=30, verbose_name='Ключ входа по бейджу')),
                ('storeRole', models.CharField(default='none', max_length=100, verbose_name='Роль пользователя')),
                ('backoffice_login', models.CharField(default='none', max_length=100, verbose_name='Ключ BackOffice')),
                ('bearer_token', models.CharField(default='none', max_length=1000, verbose_name='Bearer Token пользователя')),
                ('selected_stationary_printer', models.CharField(blank=True, max_length=100, null=True, verbose_name='Выбранный стационарный принтер')),
                ('selected_thermo_printer', models.CharField(blank=True, max_length=100, null=True, verbose_name='Выбранный термопринтер')),
                ('selected_mobile_printer_yellow', models.CharField(blank=True, max_length=100, null=True, verbose_name='Выбранный мобильный принтер с желтой бумагой')),
                ('selected_mobile_printer_white', models.CharField(blank=True, max_length=100, null=True, verbose_name='Выбранный мобильный принтер с белой бумагой')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', Core.managers.UserManager()),
            ],
        ),
    ]
